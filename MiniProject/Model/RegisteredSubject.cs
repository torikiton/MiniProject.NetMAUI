// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using RegisteredSubject.Model;
//
//    var registeredSubject = RegisteredSubject.FromJson(jsonString);

namespace RegisteredSubject.Model
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class RegisteredSubject
    {
        [JsonProperty("idx")]
        public long Idx { get; set; }

        [JsonProperty("courseCode")]
        public long CourseCode { get; set; }

        [JsonProperty("subjectName")]
        public string SubjectName { get; set; }

        [JsonProperty("credit")]
        public long Credit { get; set; }

        [JsonProperty("year")]
        public long Year { get; set; }

        [JsonProperty("term")]
        public long Term { get; set; }

        [JsonProperty("RegistrationDate")]
        public string RegistrationDate { get; set; }

        [JsonProperty("Status")]
        public string Status { get; set; }

        [JsonProperty("CanWithdraw")]
        public bool CanWithdraw { get; set; }
    }

    public partial class RegisteredSubject
    {
        public static List<RegisteredSubject> FromJson(string json) => JsonConvert.DeserializeObject<List<RegisteredSubject>>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<RegisteredSubject> self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
