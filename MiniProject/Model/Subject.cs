// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MiniProjectSubject.Model;
//
//    var subject = Subject.FromJson(jsonString);

namespace MiniProjectSubject.Model
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Subject
    {
        [JsonProperty("idx")]
        public long Idx { get; set; }

        [JsonProperty("courseCode")]
        public long CourseCode { get; set; }

        [JsonProperty("subjectName")]
        public string SubjectName { get; set; }

        [JsonProperty("credit")]
        public long Credit { get; set; }

        [JsonProperty("year")]
        public long Year { get; set; }

        [JsonProperty("term")]
        public long Term { get; set; }
    }

    public partial class Subject
    {
        public static List<Subject> FromJson(string json) => JsonConvert.DeserializeObject<List<Subject>>(json, MiniProjectSubject.Model.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Subject> self) => JsonConvert.SerializeObject(self, MiniProjectSubject.Model.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
